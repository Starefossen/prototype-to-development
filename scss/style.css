@charset "UTF-8";
/*------------------------------------*\
    STYLE.SCSS
\*------------------------------------*/
/**
 * Here we start to pull everything together into one big stylesheet.
 *
 * SETUP............Settings, tools, mixins, etc.
 * GENERIC..........normalize.css, reset, shared styles, etc.
 * BASE.............Basic HTML elements.
 * OBJECTS..........Objects, abstractions, design patterns.
 * GUI..............Components and modules.
 * TRUMPS...........Helpers, overrides, ‘trump-cards’.
 */
/*------------------------------------*\
    #SETTINGS
\*------------------------------------*/
/**
 * Sass vars, etc.
 */
/*------------------------------------*\
    #SETTINGS
\*------------------------------------*/
/**
 * Pull in all the settings we require for this project.
 */
/*------------------------------------*\
    #OVERRIDES
    This is where we add overrides for inuits default variables.
\*------------------------------------*/
/*------------------------------------*\
    #COLOR
\*------------------------------------*/
/*------------------------------------*\
    #VARS
\*------------------------------------*/
/**
 * Generic, non-specific variables.
 */
/*------------------------------------*\
    #TOOLS
\*------------------------------------*/
/**
 * Functions and mixins.
 */
/*------------------------------------*\
    #TOOLS
    Here we add some default functions and mixins from inuit as well
    as our own.
\*------------------------------------*/
/*------------------------------------*\
    #FUNCTIONS
\*------------------------------------*/
/**
 * Here we can add our own functions
 */
/*------------------------------------*\
    #MIXINS
\*------------------------------------*/
/**
 * Here we can add mixins that's not imported with inuit.
 */
/*
Antaliased text
Use:

    .foo{
    @include antialiased;
    }


*/
/**
 * A simple top-to-bottom linear gradient with fallback color of our choice.
 */
/*
BREAKPOINTS
via http://ahrengot.com/web-development/sass-breakpoint-mixin/
Use:
    .foo{
        @include bp(palm) { width: 80%;}
        @include bp(min-width, 1192px) { background: red;}
        @include bp-between(0, 1024px) { font-size: 1.3em;}
    }
*/
/*
KEYFRAME
Use:
    @include keyframe(fadeout) {
        0% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }
*/
/*
    ANIMATION
    use:
        .foo{
        @include animation(8s, 4s, fadeout)
        }
 */
/*
* @include triangle within a pseudo element and add positioning properties (ie. top, left)
* $direction: up, down, left, right
* via http://hackingui.com/front-end/10-best-scss-utilities/
*/
/*------------------------------------*\
    #GENERIC
\*------------------------------------*/
/**
 * These are far reaching styles that affect and underpin every element on the
 * page, e.g. `* {}`, resets etc.
 */
/*------------------------------------*\
    #GENERIC
\*------------------------------------*/
/**
 * Pull in all our generic styles, e.g. resets.
 */
/*! normalize.css v3.0.0 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*------------------------------------*\
    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*\
    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 */
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6, hgroup,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem; }

/*------------------------------------*\
    #CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.clearfix:after,
.media:after,
.box:after {
  content: "";
  display: table;
  clear: both; }

/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * These are base HTML elements, things with no classes on them, e.g. `h1 {}`,
 * `blockquote {}`.
 */
/*------------------------------------*\
    #BASE
\*------------------------------------*/
/**
 * Pull in all the base files we want.
 */
/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * High-, page-level styling.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  background-color: white;
  color: #333333;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */ }

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.lede {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333; }

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1–6, with corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 */
h1,
.alpha {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333; }

h2,
.beta {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6; }

h3,
.gamma {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

h4,
.delta {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2; }

h5,
.epsilon {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5; }

h6,
.zeta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429; }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */ }

/**
 * If a `width` and/or `height` attribute have been explicitly defined, let’s
 * not make the image fluid.
 */
img[width],
img[height] {
  max-width: none; }

/*------------------------------------*\
    #BASE overrides
\*------------------------------------*/
/**
 * Overrides that we want for the Base-styles..
 */
a {
  color: blue; }

fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*------------------------------------*\
    #OBJECTS
\*------------------------------------*/
/**
 * These are design-free objects, abstractions and design patterns. These create
 * constructs that you lay your designs over.
 */
/*------------------------------------*\
    #OBJECTS
\*------------------------------------*/
/**
 * Pull in all our objects and abstractions.
 */
/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/**
 * The inuitcss layout system uses `box-sizing: border-box;` and
 * `display: inline-block;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with
 * the widths found in `trumps.widths`.
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -24px; }

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
.layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */ }

/*------------------------------------*\
    #BARE-LIST
\*------------------------------------*/
/**
 * The bare-list object simply removes any indents and bullet points from lists.
 */
.bare-list {
  margin: 0;
  padding: 0;
  list-style: none; }

/*------------------------------------*\
    #BLOCK-LIST
\*------------------------------------*/
/**
 * The block list object creates blocky list items out of a `ul` or `ol`.
 */
.block-list {
  margin: 0;
  padding: 0;
  list-style: none; }

.block-list__item {
  padding: 24px; }

/*------------------------------------*\
    #UI-LIST
\*------------------------------------*/
/**
 * The UI list object creates blocky list items with a keyline separator out of
 * a `ul` or `ol`.
 */
.ui-list,
.ui-list__item {
  border: 0 solid #cccccc; }

.ui-list {
  margin: 0;
  padding: 0;
  list-style: none;
  border-top-width: 1px; }

.ui-list__item {
  padding: 24px;
  border-bottom-width: 1px; }

/*------------------------------------*\
    #MEDIA
\*------------------------------------*/
/**
 * Place any image- and text-like content side-by-side, as per:
 * stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.media {
  display: block; }

.media__img {
  float: left;
  margin-right: 24px; }
  .media__img > img {
    display: block; }

.media__body {
  overflow: hidden; }
  .media__body,
  .media__body > :last-child {
    margin-bottom: 0; }

/**
 * Reversed image location (right instead of left). Extends `.media`.
 */
.media--rev > .media__img {
  float: right;
  margin-right: 0;
  margin-left: 24px; }

/*------------------------------------*\
    #FLAG
\*------------------------------------*/
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 */
/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */ }

/**
 * Items within a flag object. There should only ever be one of each.
 *
 * 1. Default to aligning content to their middles.
 */
.flag__img,
.flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */ }

/**
 * Flag images have a space between them and the body of the object.
 */
.flag__img {
  padding-right: 24px; }
  .flag__img > img {
    display: block;
    max-width: none; }

/**
 * The container for the main content of the flag object.
 *
 * 1. Forces the `.flag__body` to take up all remaining space.
 */
.flag__body {
  width: 100%;
  /* [1] */ }

/**
 * Reversed flag objects have their image-content to the right, and text-content
 * to the left.
 *
 * 1. Swap the rendered direction of the object…
 * 2. …and reset it.
 * 3. Reassign margins to the correct sides.
 */
.flag--rev {
  direction: rtl;
  /* [1] */ }
  .flag--rev > .flag__img,
  .flag--rev > .flag__body {
    direction: ltr;
    /* [2] */ }
  .flag--rev > .flag__img {
    padding-right: 0;
    /* [3] */
    padding-left: 24px;
    /* [3] */ }

/*------------------------------------*\
    #BOX
\*------------------------------------*/
/**
 * The box object simply boxes off content.
 */
/**
 * 1. So we can apply the `.box` class to naturally-inline elements.
 */
.box {
  display: block;
  /* [1] */
  padding: 24px; }
  .box > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    #TABS
\*------------------------------------*/
/**
 * A simple abstraction for making equal-width navigation tabs.
 *
 * 1. Reset any residual styles (most likely from lists).
 * 2. Tables for layout!
 * 3. Force all `table-cell` children to have equal widths.
 * 4. Force the object to be the full width of its parent. Combined with [2],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.tabs {
  margin: 0;
  /* [1] */
  padding: 0;
  /* [1] */
  list-style: none;
  /* [1] */
  display: table;
  /* [2] */
  table-layout: fixed;
  /* [3] */
  width: 100%;
  /* [4] */
  text-align: center; }

.tabs__item {
  display: table-cell;
  /* [2] */ }

.tabs__link {
  display: block; }

/*------------------------------------*\
    $SPRITE
    Based on https://github.com/csswizardry/inuit.css/blob/master/objects/_sprite.scss
\*------------------------------------*/
/**
 * Giving an element a class of `.sprite` will throw it into ‘sprite’ mode and apply
 * a background image e.g.:
 *
   <a class="sprite  sprite--question-mark">More info&hellip;</a>
 *
 * or
 *
   <a href=#><i class="sprite  sprite--question-mark"></i> Help and FAQ</a>
 *
 * Giving an element a class of `.icon` will throw it into ‘icon’ mode and will
 * not add a background, but should be used for icon fonts and is populated
 * through a `data-icon` attribute and the `:after` pseudo-element, e.g.:
 *
   <a href=#><i class=icon data-icon="&#xF000;"></i> View your favourites</a>
 *
 * Where ‘&#xF000;’ might map to a star in your particular icon font.
 *
 * These all require extension in your theme stylesheet, e.g. in your own CSS:
 *
   .sprite{
       background-image:url(path/to/your/sprite.png);
   }
   .sprite--link{ background-position:0   0  ; }
   .sprite--star{ background-position:0 -16px; }
 *
 * Demo: jsfiddle.net/inuitcss/6TKuS
 *
 */
.sprite,
.icon {
  display: inline-block;
  line-height: 1;
  position: relative;
  vertical-align: middle;
  zoom: 1;
  /**
   * So using `.icon` on certain elements doesn’t make a visual difference.
   */
  font-style: normal;
  font-weight: normal;
  /**
   * So icons added using `.icon` sit in the centre of the element.
   */
  text-align: center; }

.sprite {
  /**
   * The typical size of most icons. Override in your theme stylesheet.
   */
  width: 16px;
  height: 16px;
  top: -1px;
  /*
   * H5BP method image replacement:
   * github.com/h5bp/html5-boilerplate/commit/adecc5da035d6d76b77e3fa95c6abde841073da2
   */
  overflow: hidden;
  *text-indent: -9999px; }
  .sprite:before {
    content: "";
    display: block;
    width: 0;
    height: 100%; }

/**
 * Set up icon font
 */
.icon {
  font-size: 16px;
  /**
   * Place the icon in a box the exact same dimensions as the icon itself.
   */
  width: 1em;
  height: 1em; }
  .icon:before {
    content: attr(data-icon); }

/**
 * Icon size modifiers.
 */
.icon--large {
  font-size: 32px; }

.icon--huge {
  font-size: 64px; }

.icon--natural {
  font-size: inherit; }

/*------------------------------------*\
    $BEAUTONS.CSS
\*------------------------------------*/
/**
 * beautons is a beautifully simple button toolkit.
 *
 * LICENSE
 *
 * Copyright 2013 Harry Roberts
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
/*!*
 *
 * @csswizardry -- csswizardry.com/beautons
 *
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/**
 * Base button styles.
 *
 *  1. Allow us to better style box model properties.
 *  2. Line different sized buttons up a little nicer.
 *  3. Stop buttons wrapping and looking broken.
 *  4. Make buttons inherit font styles.
 *  5. Force all elements using beautons to appear clickable.
 *  6. Normalise box model styles.
 *  7. If the button’s text is 1em, and the button is (3 * font-size) tall, then
 *     there is 1em of space above and below that text. We therefore apply 1em
 *     of space to the left and right, as padding, to keep consistent spacing.
 *  8. Basic cosmetics for default buttons. Change or override at will. @mhauken: don't want any styling here as default
 *  9. Fixes odd inner spacing in IE7.
 * 10. Don’t allow buttons to have underlines; it kinda ruins the illusion.
 * 11. Prevents from inheriting default anchor styles.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  font-family: inherit;
  /* [4] */
  font-size: 100%;
  /* [4] */
  cursor: pointer;
  /* [5] */
  border: none;
  /* [6] */
  margin: 0;
  /* [6] */
  padding-top: 0;
  /* [6] */
  padding-bottom: 0;
  /* [6] */
  line-height: 3;
  /* [7] */
  height: 3em;
  /* [7] */
  padding-right: 1em;
  /* [7] */
  padding-left: 1em;
  /* [7] */
  background-color: transparent;
  /* [8] */
  border-radius: 4px;
  /* [8] */
  overflow: visible;
  /* [9] */
  color: blue; }

.btn,
.btn:hover,
.btn:active,
.btn:focus,
.btn:visited {
  text-decoration: none;
  /* [10] */
  color: blue;
  /* [11] */ }

.btn:hover {
  color: #0000cc; }

.btn:active,
.btn:focus {
  outline: none;
  -webkit-box-shadow: 0 0 2px rgba(0, 0, 0, 0.5) inset;
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.5) inset; }

.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*------------------------------------*\
    $SIZES
\*------------------------------------*/
/**
 * Button size modifiers.
 *
 * These all follow the same sizing rules as above; text is 1em, space around it
 * remains uniform.
 */
.btn--small {
  padding-right: 0.5em;
  padding-left: 0.5em;
  line-height: 2;
  height: 2em; }

.btn--large {
  padding-right: 1.5em;
  padding-left: 1.5em;
  line-height: 4;
  height: 4em; }

.btn--huge {
  padding-right: 2em;
  padding-left: 2em;
  line-height: 5;
  height: 5em; }

/**
 * These buttons will fill the entirety of their container.
 *
 * 1. Remove padding so that widths and paddings don’t conflict.
 */
.btn--full {
  width: 100%;
  padding-right: 0;
  /* [1] */
  padding-left: 0;
  /* [1] */
  text-align: center; }

input[type=submit].button--full {
  width: 100%; }

@media (min-width: 600px) {
  .btn--full-on-mobile {
    width: 100%;
    padding-right: 0;
    padding-left: 0;
    text-align: center; }

  [type=submit].btn--full-on-mobile {
    width: 100%; } }
/*------------------------------------*\
    $FONT-SIZES
\*------------------------------------*/
/**
 * Button font-size modifiers.
 */
.btn--alpha {
  font-size: 3rem; }

.btn--beta {
  font-size: 2rem; }

.btn--gamma {
  font-size: 1rem; }

/**
 * Make the button inherit sizing from its parent.
 */
.btn--natural {
  vertical-align: baseline;
  font-size: inherit;
  line-height: inherit;
  height: auto;
  padding-right: 0.5em;
  padding-left: 0.5em; }

/*------------------------------------*\
    $FUNCTIONS
\*------------------------------------*/
/**
 * Button function modifiers.
 */
/**
 * Positive actions; e.g. sign in, purchase, submit, etc.
 */
.btn--positive {
  background-color: #4A993E;
  color: #fff; }

/**
 * Negative actions; e.g. close account, delete photo, remove friend, etc.
 */
.btn--negative {
  background-color: #b33630;
  color: #fff; }

/**
 * Inactive, disabled buttons.
 *
 * 1. Make the button look like normal text when hovered.
 */
.btn--inactive,
.btn--inactive:hover,
.btn--inactive:active,
.btn--inactive:focus {
  background-color: #ddd;
  color: #777;
  cursor: default;
  /* [1] */
  -webkit-box-shadow: none;
  box-shadow: none; }

/*------------------------------------*\
    $STYLES
\*------------------------------------*/
/**
 * Button style modifiers.
 *
 * 1. Use an overly-large number to ensure completely rounded, pill-like ends.
 */
.btn--soft {
  border-radius: 5em;
  /* [1] */ }

.btn--hard {
  border-radius: 0; }

/*------------------------------------*\
    #GUI/components
\*------------------------------------*/
/**
 * These are your components and modules; things like buttons, accordions,
 * carousels, etc. This is where you'll place most of your elements
 */
/*------------------------------------*\
    #GUI
\*------------------------------------*/
/**
 * Pull in all our GUI components.
 */
.sprite {
  background-image: url("/img/sprite.svg"); }

.form {
  margin-bottom: 24px; }

.form__label {
  font-weight: bold;
  display: block; }

.form__label--inline {
  display: inline; }

.form__input {
  width: 100%; }

.btn--primary {
  color: white;
  background: green; }
  .btn--primary:hover {
    color: white;
    background: #004d00; }

.btn--secondary {
  color: white;
  background: blue; }
  .btn--secondary:hover {
    color: white;
    background: #0000cc; }

/*------------------------------------*\
    #TRUMPS
\*------------------------------------*/
/**
 * These are helper classes and overrides that should take precedence over all
 * other styles, e.g. `.float--left {}`.
 */
/*------------------------------------*\
    #TRUMPS
\*------------------------------------*/
/**
 * Pull in all our trumps and overrides.
 */
/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.2/3`) or a spoken-
 * word format (e.g. `two-thirds`). Toggle formats by overriding the
 * `$inuit-use-fractions` variable defined below.
 */
/**
 * Halves.
 */
[class~="1/2"],
[class~="2/4"],
[class~="3/6"],
[class~="4/8"],
[class~="5/10"],
[class~="6/12"] {
  width: 50% !important; }

/**
 * Thirds.
 */
[class~="1/3"],
[class~="2/6"],
[class~="3/9"],
[class~="4/12"] {
  width: 33.3333333% !important; }

[class~="2/3"],
[class~="4/6"],
[class~="6/9"],
[class~="8/12"] {
  width: 66.6666666% !important; }

/**
 * Quarters.
 */
[class~="1/4"],
[class~="2/8"],
[class~="3/12"] {
  width: 25% !important; }

[class~="3/4"],
[class~="6/8"],
[class~="9/12"] {
  width: 75% !important; }

/**
 * Fifths.
 */
[class~="1/5"],
[class~="2/10"] {
  width: 20% !important; }

[class~="2/5"],
[class~="4/10"] {
  width: 40% !important; }

[class~="3/5"],
[class~="6/10"] {
  width: 60% !important; }

[class~="4/5"],
[class~="8/10"] {
  width: 80% !important; }

/**
 * Sixths.
 */
[class~="1/6"],
[class~="2/12"] {
  width: 16.6666666% !important; }

[class~="5/6"],
[class~="10/12"] {
  width: 83.3333333% !important; }

/**
 * Eighths.
 */
[class~="1/8"] {
  width: 12.5% !important; }

[class~="3/8"] {
  width: 37.5% !important; }

[class~="5/8"] {
  width: 62.5% !important; }

[class~="7/8"] {
  width: 87.5% !important; }

/**
 * Ninths.
 */
[class~="1/9"] {
  width: 11.1111111% !important; }

[class~="2/9"] {
  width: 22.2222222% !important; }

[class~="4/9"] {
  width: 44.4444444% !important; }

[class~="5/9"] {
  width: 55.5555555% !important; }

[class~="7/9"] {
  width: 77.7777777% !important; }

[class~="8/9"] {
  width: 88.8888888% !important; }

/**
 * Tenths.
 */
[class~="1/10"] {
  width: 10% !important; }

[class~="3/10"] {
  width: 30% !important; }

[class~="7/10"] {
  width: 70% !important; }

[class~="9/10"] {
  width: 90% !important; }

/**
 * Twelfths.
 */
[class~="1/12"] {
  width: 8.3333333% !important; }

[class~="5/12"] {
  width: 41.6666666% !important; }

[class~="7/12"] {
  width: 58.3333333% !important; }

[class~="11/12"] {
  width: 91.6666666% !important; }

/*------------------------------------*\
    #SPACING
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|e|s)(-|+|0) {}` = margin/padding top/right/bottom/left/ends/sides less/more/none
 */
/**
 * Margin helper classes.
 *
 * Add margins.
 */
.m {
  margin: 24px !important; }

.mt {
  margin-top: 24px !important; }

.mr {
  margin-right: 24px !important; }

.mb {
  margin-bottom: 24px !important; }

.ml {
  margin-left: 24px !important; }

.me {
  margin-top: 24px !important;
  margin-bottom: 24px !important; }

.ms {
  margin-right: 24px !important;
  margin-left: 24px !important; }

/**
 * Add small margins.
 */
.m- {
  margin: 12px !important; }

.mt- {
  margin-top: 12px !important; }

.mr- {
  margin-right: 12px !important; }

.mb- {
  margin-bottom: 12px !important; }

.ml- {
  margin-left: 12px !important; }

.me- {
  margin-top: 12px !important;
  margin-bottom: 12px !important; }

.ms- {
  margin-right: 12px !important;
  margin-left: 12px !important; }

/**
 * Add large margins.
 */
.m\+ {
  margin: 48px !important; }

.mt\+ {
  margin-top: 48px !important; }

.mr\+ {
  margin-right: 48px !important; }

.mb\+ {
  margin-bottom: 48px !important; }

.ml\+ {
  margin-left: 48px !important; }

.me\+ {
  margin-top: 48px !important;
  margin-bottom: 48px !important; }

.ms\+ {
  margin-right: 48px !important;
  margin-left: 48px !important; }

/**
 * Remove margins.
 */
.m0 {
  margin: 0 !important; }

.mt0 {
  margin-top: 0 !important; }

.mr0 {
  margin-right: 0 !important; }

.mb0 {
  margin-bottom: 0 !important; }

.ml0 {
  margin-left: 0 !important; }

.me0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

.ms0 {
  margin-right: 0 !important;
  margin-left: 0 !important; }

/**
 * Padding helper classes.
 *
 * Add paddings.
 */
.p {
  padding: 24px !important; }

.pt {
  padding-top: 24px !important; }

.pr {
  padding-right: 24px !important; }

.pb {
  padding-bottom: 24px !important; }

.pl {
  padding-left: 24px !important; }

.pe {
  padding-top: 24px !important;
  padding-bottom: 24px !important; }

.ps {
  padding-right: 24px !important;
  padding-left: 24px !important; }

/**
 * Add small paddings.
 */
.p- {
  padding: 12px !important; }

.pt- {
  padding-top: 12px !important; }

.pr- {
  padding-right: 12px !important; }

.pb- {
  padding-bottom: 12px !important; }

.pl- {
  padding-left: 12px !important; }

.pe- {
  padding-top: 12px !important;
  padding-bottom: 12px !important; }

.ps- {
  padding-right: 12px !important;
  padding-left: 12px !important; }

/**
 * Add large paddings.
 */
.p\+ {
  padding: 48px !important; }

.pt\+ {
  padding-top: 48px !important; }

.pr\+ {
  padding-right: 48px !important; }

.pb\+ {
  padding-bottom: 48px !important; }

.pl\+ {
  padding-left: 48px !important; }

.pe\+ {
  padding-top: 48px !important;
  padding-bottom: 48px !important; }

.ps\+ {
  padding-right: 48px !important;
  padding-left: 48px !important; }

/**
 * Remove paddings.
 */
.p0 {
  padding: 0 !important; }

.pt0 {
  padding-top: 0 !important; }

.pr0 {
  padding-right: 0 !important; }

.pb0 {
  padding-bottom: 0 !important; }

.pl0 {
  padding-left: 0 !important; }

.pe0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important; }

.ps0 {
  padding-right: 0 !important;
  padding-left: 0 !important; }

/*------------------------------------*\
    #HELPERS
\*------------------------------------*/
/**
 * A selection of abstracted helper classes. Only use these if there is not
 * already a class on the element you wish to target.
 */
/**
 * Float rules. There is no `.float` class.
 */
.float--none {
  float: none !important; }

.float--right, .fr {
  float: right !important; }

.float--left, .fl {
  float: left !important; }

.hide {
  display: none; }

.hide--on-mobile {
  display: none !important; }
  @media (min-width: 380px) {
    .hide--on-mobile {
      display: inherit !important; } }

.disabled {
  pointer-events: none;
  opacity: 0.5; }

/**
 * text-align rules. There is no `.text-align` class.
 */
.text-align--left {
  text-align: left; }

.text-align--center {
  text-align: center; }

.text-align--right {
  text-align: right; }

/**
 * Round corners.
 */
.soft {
  border-radius: 4px !important; }

.visuallyhidden {
  position: absolute;
  width: 1px;
  /* Setting this to 0 make it invisible for VoiceOver */
  height: 1px;
  /* Setting this to 0 make it invisible for VoiceOver */
  padding: 0;
  margin: -1px;
  border: 0;
  clip: rect(0 0 0 0);
  overflow: hidden; }

.ir {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden; }

.no-wrap {
  white-space: nowrap; }

/*------------------------------------*\
    #SHAME
    This is where we put quick sketches, hacks etc
    to fix later on.
    More on http://csswizardry.com/2013/04/shame-css/

    Document everything!!!!!
\*------------------------------------*/

/*# sourceMappingURL=style.css.map */