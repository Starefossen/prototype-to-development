@charset "UTF-8";
/*------------------------------------*\
    This SCSS is based upon inuit.css (https://github.com/inuitcss/getting-started).
    We're importing default blocks from inuit (all the files that's inside the bower_components folder).
    These files we can not change. However these are heavily based on SCSS variables, so we can change these by supplying the specific SCSS-variable before we import each SCSS-file. By default most of inuit is turned off, so we need to turn on each class via variables before importing.

    We have structured the CSS in a specific way to avoid specificity-problems. Basically we are first targetting elements without class-names etc, then we are applying abstract patterns before we apply most of our own styles and in the end helper-classes and layouts that should overwrite everything else..
\*------------------------------------*/
/**
 * CONTENTS
 *
 * SETTINGS
 * Defaults.............Globally-available variables and config from inui.
 * Responsive...........Breakpoint-variables from inuit.
 * Vars.................Our own variables
 *
 * TOOLS
 * Functions............Maths helpers to use throuhout the project
 * Mixins...............Font size mixins
 * Responsive...........Media query mixin
 *
 * GENERIC
 * Normalize.css........A level playing field.
 * Reset................Extra removal of margins
 * Box-sizing...........Better default `box-sizing`.
 * Shared...............Similar margins troughout the project
 *
 * BASE
 * Page.................High-, page-level styling
 * Paragraphs...........Class for ingress on paragraphs
 * Images...............Base image styling
 * Lists................Base list styling
 * Page.................Our own additions to to High-, page-level styling
 * Headings.............H1–H6 styles.
 *
 * OBJECTS
 * Box..................Simple object to make boxed-off content.
 * Flag.................Pattern with image to one side + text to the other
 * Buttons..............Basic button-styling
 * List-inline..........Simply displays a list as one horizontal row.
 * List-ui..............List that creates blocky list items with lines between.
 * Layout...............inuitcss’ answer to the traditional grid system.
 * Wrappers.............Wrapping and constraining elements.
 *
 * COMPONENTS
 *
 *
 * TRUMPS
 * Clearfix.............Simple clearfix helper
 * Widths...............A series of helper classes for dealing with widths
 * Widths responsive....A responsive extension to Widths
 * Spacing..............Spacing helper classes
 * Spacing responsive...A responsive extension to Spacing
 * Hide responsive......Helper classes for hiding elements.
 * Helpers..............Our own additional helper-classes
 */
/*------------------------------------*\
    #SETTINGS
    Global variables, site-wide settings, config switches, etc.
    These are just for SCSS – nothing here gets compiled to CSS directly
\*------------------------------------*/
/*!
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/*------------------------------------*\
    #VARS
    Our own variables to use throughout the project.
\*------------------------------------*/
/**
 * RESPONSIVE BREAKPOINTS
 * This is where we define all our breakpoints.
 *
 * Usage:
 *  @include media-query(palm) {
 *
 *  }
 */
/**
 * Modifying inuits defaults for helper-classes and widths.
 */
/**
 * COLORS
 */
/**
 * ALIASES
 * where we want to remap common variables without inuit-prefix:
 */
/*------------------------------------*\
    #TOOLS
    Site-wide mixins and functions.
    These are just for SCSS - nothing here gets directly compiled to CSS.
\*------------------------------------*/
/*------------------------------------*\
    #GENERIC
    Low-specificity, far-reaching rulesets (e.g. resets).
    Here we have our basic resets
\*------------------------------------*/
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*------------------------------------*\
    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*\
    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

*, *:before, *:after {
  -moz-box-sizing: inherit;
  box-sizing: inherit; }

/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
hr,
table,
fieldset, figure,
pre {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem; }

/*------------------------------------*\
    #BASE
    Unclassed HTML elements (e.g. a {}, blockquote {}, address {}).
    Here we style all our HTML-elements with the basic styling we want.
\*------------------------------------*/
/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * High-, page-level styling.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 * 4. Prevent certain mobile browsers from automatically zooming fonts.
 * 5. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  background-color: #f2f2f2;
  color: #333;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
  -webkit-text-size-adjust: 100%;
  /* [4] */
  -ms-text-size-adjust: 100%;
  /* [4] */
  -moz-osx-font-smoothing: grayscale;
  /* [5] */
  -webkit-font-smoothing: antialiased;
  /* [5] */ }

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.lede {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333; }

/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */ }

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
.gm-style img,
img[width],
img[height] {
  /* [2] */
  max-width: none; }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #OBJECTS
    Objects, abstractions, and design patterns (e.g. .media {}).
    Here we import abstractions without styling etc.
    Missing some abstractions? Read trough the SCSS-files imported to turn
    on variables or get new ones from here:
    https://github.com/inuitcss?query=objects.
\*------------------------------------*/
/*------------------------------------*\
    #BOX
\*------------------------------------*/
/**
 * The box object simply boxes off content.
 */
/**
 * 1. So we can apply the `.box` class to naturally-inline elements.
 */
.box {
  display: block;
  /* [1] */
  padding: 24px; }
  .box > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    #FLAG
\*------------------------------------*/
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 */
/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */ }

/**
 * Items within a flag object. There should only ever be one of each.
 *
 * 1. Default to aligning content to their middles.
 */
.flag__img,
.flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */ }

/**
 * Flag images have a space between them and the body of the object.
 */
.flag__img {
  padding-right: 24px; }
  .flag__img > img {
    display: block;
    max-width: none; }

/**
 * The container for the main content of the flag object.
 *
 * 1. Forces the `.flag__body` to take up all remaining space.
 */
.flag__body {
  width: 100%;
  /* [1] */ }
  .flag__body,
  .flag__body > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/**
 * A simple button object.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  border: none;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 12px 24px;
  /* [7] */
  background-color: #dfdfdf; }
  .btn, .btn:hover, .btn:active, .btn:focus {
    text-decoration: none;
    /* [4] */
    color: #444; }

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Small buttons.
 */
.btn--small {
  padding: 6px 12px;
  /* [7] */ }

/*------------------------------------*\
    #LIST-INLINE
\*------------------------------------*/
/**
 * The list-inline object simply displays a list of items in one line.
 */
.list-inline {
  margin: 0;
  padding: 0;
  list-style: none; }
  .list-inline > li {
    display: inline-block; }

/*------------------------------------*\
    #LIST-UI
\*------------------------------------*/
/**
 * The UI list object creates blocky list items with a keyline separator out of
 * a `ul` or `ol`.
 */
.list-ui,
.list-ui__item,
.list-ui > li {
  border: 0 solid #ccc; }

.list-ui {
  margin: 0;
  padding: 0;
  list-style: none;
  border-top-width: 1px; }

.list-ui__item,
.list-ui > li {
  padding: 24px;
  border-bottom-width: 1px; }

/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/**
 * The inuitcss layout system uses `box-sizing: border-box;` and
 * `display: inline-block;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with
 * the widths found in `trumps.widths`.
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -24px; }

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
.layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */ }

.wrapper {
  margin: auto;
  max-width: 1280px;
  padding: 0 12px; }
  @media screen and (max-width: 639px) {
    .wrapper {
      padding: 0 6px; } }

/*------------------------------------*\
    #COMPONENTS
    Discrete, complete chunks of UI (e.g. .carousel {}).
    This is the one layer that inuitcss doesn’t get involved with.
    This is where we add our own components and modifiers to the objects.
\*------------------------------------*/
/*------------------------------------*\
    #TRUMPS
    High-specificity, very explicit selectors. Overrides and helper classes (e.g. .hidden {})
    Helpers and layout-classes
\*------------------------------------*/
/*------------------------------------*\
    #CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.clearfix:after,
.box:after {
  content: "";
  display: table;
  clear: both; }

/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.2/3`) or a spoken-
 * word format (e.g. `two-thirds`). Toggle formats by overriding the
 * `$inuit-use-fractions` variable defined below.
 */
/**
 * Whole.
 */
[class~="1/1"] {
  width: 100% !important; }

/**
 * Halves.
 */
[class~="1/2"],
[class~="2/4"],
[class~="3/6"],
[class~="4/8"],
[class~="5/10"],
[class~="6/12"] {
  width: 50% !important; }

/**
 * Thirds.
 */
[class~="1/3"],
[class~="2/6"],
[class~="3/9"],
[class~="4/12"] {
  width: 33.3333333% !important; }

[class~="2/3"],
[class~="4/6"],
[class~="6/9"],
[class~="8/12"] {
  width: 66.6666666% !important; }

/**
 * Quarters.
 */
[class~="1/4"],
[class~="2/8"],
[class~="3/12"] {
  width: 25% !important; }

[class~="3/4"],
[class~="6/8"],
[class~="9/12"] {
  width: 75% !important; }

/**
 * Fifths.
 */
[class~="1/5"],
[class~="2/10"] {
  width: 20% !important; }

[class~="2/5"],
[class~="4/10"] {
  width: 40% !important; }

[class~="3/5"],
[class~="6/10"] {
  width: 60% !important; }

[class~="4/5"],
[class~="8/10"] {
  width: 80% !important; }

/**
 * Sixths.
 */
[class~="1/6"],
[class~="2/12"] {
  width: 16.6666666% !important; }

[class~="5/6"],
[class~="10/12"] {
  width: 83.3333333% !important; }

/**
 * Eighths.
 */
[class~="1/8"] {
  width: 12.5% !important; }

[class~="3/8"] {
  width: 37.5% !important; }

[class~="5/8"] {
  width: 62.5% !important; }

[class~="7/8"] {
  width: 87.5% !important; }

/**
 * Ninths.
 */
[class~="1/9"] {
  width: 11.1111111% !important; }

[class~="2/9"] {
  width: 22.2222222% !important; }

[class~="4/9"] {
  width: 44.4444444% !important; }

[class~="5/9"] {
  width: 55.5555555% !important; }

[class~="7/9"] {
  width: 77.7777777% !important; }

[class~="8/9"] {
  width: 88.8888888% !important; }

/**
 * Tenths.
 */
[class~="1/10"] {
  width: 10% !important; }

[class~="3/10"] {
  width: 30% !important; }

[class~="7/10"] {
  width: 70% !important; }

[class~="9/10"] {
  width: 90% !important; }

/**
 * Twelfths.
 */
[class~="1/12"] {
  width: 8.3333333% !important; }

[class~="5/12"] {
  width: 41.6666666% !important; }

[class~="7/12"] {
  width: 58.3333333% !important; }

[class~="11/12"] {
  width: 91.6666666% !important; }

/*------------------------------------*\
    #WIDTHS-RESPONSIVE
\*------------------------------------*/
/**
 * Responsive width classes based on your responsive settings.
 */
@media screen and (max-width: 639px) {
  /**
   * Whole.
   */
  [class~="palm-1/1"] {
    width: 100% !important; }

  /**
   * Halves.
   */
  [class~="palm-1/2"],
  [class~="palm-2/4"],
  [class~="palm-3/6"],
  [class~="palm-4/8"],
  [class~="palm-5/10"],
  [class~="palm-6/12"] {
    width: 50% !important; }

  /**
   * Thirds.
   */
  [class~="palm-1/3"],
  [class~="palm-2/6"],
  [class~="palm-3/9"],
  [class~="palm-4/12"] {
    width: 33.3333333% !important; }

  [class~="palm-2/3"],
  [class~="palm-4/6"],
  [class~="palm-6/9"],
  [class~="palm-8/12"] {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  [class~="palm-1/4"],
  [class~="palm-2/8"],
  [class~="palm-3/12"] {
    width: 25% !important; }

  [class~="palm-3/4"],
  [class~="palm-6/8"],
  [class~="palm-9/12"] {
    width: 75% !important; }

  /**
   * Fifths.
   */
  [class~="palm-1/5"],
  [class~="palm-2/10"] {
    width: 20% !important; }

  [class~="palm-2/5"],
  [class~="palm-4/10"] {
    width: 40% !important; }

  [class~="palm-3/5"],
  [class~="palm-6/10"] {
    width: 60% !important; }

  [class~="palm-4/5"],
  [class~="palm-8/10"] {
    width: 80% !important; }

  /**
   * Sixths.
   */
  [class~="palm-1/6"],
  [class~="palm-2/12"] {
    width: 16.6666666% !important; }

  [class~="palm-5/6"],
  [class~="palm-10/12"] {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  [class~="palm-1/8"] {
    width: 12.5% !important; }

  [class~="palm-3/8"] {
    width: 37.5% !important; }

  [class~="palm-5/8"] {
    width: 62.5% !important; }

  [class~="palm-7/8"] {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  [class~="palm-1/9"] {
    width: 11.1111111% !important; }

  [class~="palm-2/9"] {
    width: 22.2222222% !important; }

  [class~="palm-4/9"] {
    width: 44.4444444% !important; }

  [class~="palm-5/9"] {
    width: 55.5555555% !important; }

  [class~="palm-7/9"] {
    width: 77.7777777% !important; }

  [class~="palm-8/9"] {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  [class~="palm-1/10"] {
    width: 10% !important; }

  [class~="palm-3/10"] {
    width: 30% !important; }

  [class~="palm-7/10"] {
    width: 70% !important; }

  [class~="palm-9/10"] {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  [class~="palm-1/12"] {
    width: 8.3333333% !important; }

  [class~="palm-5/12"] {
    width: 41.6666666% !important; }

  [class~="palm-7/12"] {
    width: 58.3333333% !important; }

  [class~="palm-11/12"] {
    width: 91.6666666% !important; } }
@media screen and (min-width: 640px) and (max-width: 1023px) {
  /**
   * Whole.
   */
  [class~="lap-1/1"] {
    width: 100% !important; }

  /**
   * Halves.
   */
  [class~="lap-1/2"],
  [class~="lap-2/4"],
  [class~="lap-3/6"],
  [class~="lap-4/8"],
  [class~="lap-5/10"],
  [class~="lap-6/12"] {
    width: 50% !important; }

  /**
   * Thirds.
   */
  [class~="lap-1/3"],
  [class~="lap-2/6"],
  [class~="lap-3/9"],
  [class~="lap-4/12"] {
    width: 33.3333333% !important; }

  [class~="lap-2/3"],
  [class~="lap-4/6"],
  [class~="lap-6/9"],
  [class~="lap-8/12"] {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  [class~="lap-1/4"],
  [class~="lap-2/8"],
  [class~="lap-3/12"] {
    width: 25% !important; }

  [class~="lap-3/4"],
  [class~="lap-6/8"],
  [class~="lap-9/12"] {
    width: 75% !important; }

  /**
   * Fifths.
   */
  [class~="lap-1/5"],
  [class~="lap-2/10"] {
    width: 20% !important; }

  [class~="lap-2/5"],
  [class~="lap-4/10"] {
    width: 40% !important; }

  [class~="lap-3/5"],
  [class~="lap-6/10"] {
    width: 60% !important; }

  [class~="lap-4/5"],
  [class~="lap-8/10"] {
    width: 80% !important; }

  /**
   * Sixths.
   */
  [class~="lap-1/6"],
  [class~="lap-2/12"] {
    width: 16.6666666% !important; }

  [class~="lap-5/6"],
  [class~="lap-10/12"] {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  [class~="lap-1/8"] {
    width: 12.5% !important; }

  [class~="lap-3/8"] {
    width: 37.5% !important; }

  [class~="lap-5/8"] {
    width: 62.5% !important; }

  [class~="lap-7/8"] {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  [class~="lap-1/9"] {
    width: 11.1111111% !important; }

  [class~="lap-2/9"] {
    width: 22.2222222% !important; }

  [class~="lap-4/9"] {
    width: 44.4444444% !important; }

  [class~="lap-5/9"] {
    width: 55.5555555% !important; }

  [class~="lap-7/9"] {
    width: 77.7777777% !important; }

  [class~="lap-8/9"] {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  [class~="lap-1/10"] {
    width: 10% !important; }

  [class~="lap-3/10"] {
    width: 30% !important; }

  [class~="lap-7/10"] {
    width: 70% !important; }

  [class~="lap-9/10"] {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  [class~="lap-1/12"] {
    width: 8.3333333% !important; }

  [class~="lap-5/12"] {
    width: 41.6666666% !important; }

  [class~="lap-7/12"] {
    width: 58.3333333% !important; }

  [class~="lap-11/12"] {
    width: 91.6666666% !important; } }
@media screen and (min-width: 640px) {
  /**
   * Whole.
   */
  [class~="lap-and-up-1/1"] {
    width: 100% !important; }

  /**
   * Halves.
   */
  [class~="lap-and-up-1/2"],
  [class~="lap-and-up-2/4"],
  [class~="lap-and-up-3/6"],
  [class~="lap-and-up-4/8"],
  [class~="lap-and-up-5/10"],
  [class~="lap-and-up-6/12"] {
    width: 50% !important; }

  /**
   * Thirds.
   */
  [class~="lap-and-up-1/3"],
  [class~="lap-and-up-2/6"],
  [class~="lap-and-up-3/9"],
  [class~="lap-and-up-4/12"] {
    width: 33.3333333% !important; }

  [class~="lap-and-up-2/3"],
  [class~="lap-and-up-4/6"],
  [class~="lap-and-up-6/9"],
  [class~="lap-and-up-8/12"] {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  [class~="lap-and-up-1/4"],
  [class~="lap-and-up-2/8"],
  [class~="lap-and-up-3/12"] {
    width: 25% !important; }

  [class~="lap-and-up-3/4"],
  [class~="lap-and-up-6/8"],
  [class~="lap-and-up-9/12"] {
    width: 75% !important; }

  /**
   * Fifths.
   */
  [class~="lap-and-up-1/5"],
  [class~="lap-and-up-2/10"] {
    width: 20% !important; }

  [class~="lap-and-up-2/5"],
  [class~="lap-and-up-4/10"] {
    width: 40% !important; }

  [class~="lap-and-up-3/5"],
  [class~="lap-and-up-6/10"] {
    width: 60% !important; }

  [class~="lap-and-up-4/5"],
  [class~="lap-and-up-8/10"] {
    width: 80% !important; }

  /**
   * Sixths.
   */
  [class~="lap-and-up-1/6"],
  [class~="lap-and-up-2/12"] {
    width: 16.6666666% !important; }

  [class~="lap-and-up-5/6"],
  [class~="lap-and-up-10/12"] {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  [class~="lap-and-up-1/8"] {
    width: 12.5% !important; }

  [class~="lap-and-up-3/8"] {
    width: 37.5% !important; }

  [class~="lap-and-up-5/8"] {
    width: 62.5% !important; }

  [class~="lap-and-up-7/8"] {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  [class~="lap-and-up-1/9"] {
    width: 11.1111111% !important; }

  [class~="lap-and-up-2/9"] {
    width: 22.2222222% !important; }

  [class~="lap-and-up-4/9"] {
    width: 44.4444444% !important; }

  [class~="lap-and-up-5/9"] {
    width: 55.5555555% !important; }

  [class~="lap-and-up-7/9"] {
    width: 77.7777777% !important; }

  [class~="lap-and-up-8/9"] {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  [class~="lap-and-up-1/10"] {
    width: 10% !important; }

  [class~="lap-and-up-3/10"] {
    width: 30% !important; }

  [class~="lap-and-up-7/10"] {
    width: 70% !important; }

  [class~="lap-and-up-9/10"] {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  [class~="lap-and-up-1/12"] {
    width: 8.3333333% !important; }

  [class~="lap-and-up-5/12"] {
    width: 41.6666666% !important; }

  [class~="lap-and-up-7/12"] {
    width: 58.3333333% !important; }

  [class~="lap-and-up-11/12"] {
    width: 91.6666666% !important; } }
@media screen and (max-width: 849px) {
  /**
   * Whole.
   */
  [class~="portable-1/1"] {
    width: 100% !important; }

  /**
   * Halves.
   */
  [class~="portable-1/2"],
  [class~="portable-2/4"],
  [class~="portable-3/6"],
  [class~="portable-4/8"],
  [class~="portable-5/10"],
  [class~="portable-6/12"] {
    width: 50% !important; }

  /**
   * Thirds.
   */
  [class~="portable-1/3"],
  [class~="portable-2/6"],
  [class~="portable-3/9"],
  [class~="portable-4/12"] {
    width: 33.3333333% !important; }

  [class~="portable-2/3"],
  [class~="portable-4/6"],
  [class~="portable-6/9"],
  [class~="portable-8/12"] {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  [class~="portable-1/4"],
  [class~="portable-2/8"],
  [class~="portable-3/12"] {
    width: 25% !important; }

  [class~="portable-3/4"],
  [class~="portable-6/8"],
  [class~="portable-9/12"] {
    width: 75% !important; }

  /**
   * Fifths.
   */
  [class~="portable-1/5"],
  [class~="portable-2/10"] {
    width: 20% !important; }

  [class~="portable-2/5"],
  [class~="portable-4/10"] {
    width: 40% !important; }

  [class~="portable-3/5"],
  [class~="portable-6/10"] {
    width: 60% !important; }

  [class~="portable-4/5"],
  [class~="portable-8/10"] {
    width: 80% !important; }

  /**
   * Sixths.
   */
  [class~="portable-1/6"],
  [class~="portable-2/12"] {
    width: 16.6666666% !important; }

  [class~="portable-5/6"],
  [class~="portable-10/12"] {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  [class~="portable-1/8"] {
    width: 12.5% !important; }

  [class~="portable-3/8"] {
    width: 37.5% !important; }

  [class~="portable-5/8"] {
    width: 62.5% !important; }

  [class~="portable-7/8"] {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  [class~="portable-1/9"] {
    width: 11.1111111% !important; }

  [class~="portable-2/9"] {
    width: 22.2222222% !important; }

  [class~="portable-4/9"] {
    width: 44.4444444% !important; }

  [class~="portable-5/9"] {
    width: 55.5555555% !important; }

  [class~="portable-7/9"] {
    width: 77.7777777% !important; }

  [class~="portable-8/9"] {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  [class~="portable-1/10"] {
    width: 10% !important; }

  [class~="portable-3/10"] {
    width: 30% !important; }

  [class~="portable-7/10"] {
    width: 70% !important; }

  [class~="portable-9/10"] {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  [class~="portable-1/12"] {
    width: 8.3333333% !important; }

  [class~="portable-5/12"] {
    width: 41.6666666% !important; }

  [class~="portable-7/12"] {
    width: 58.3333333% !important; }

  [class~="portable-11/12"] {
    width: 91.6666666% !important; } }
@media screen and (min-width: 850px) {
  /**
   * Whole.
   */
  [class~="portable-and-up-1/1"] {
    width: 100% !important; }

  /**
   * Halves.
   */
  [class~="portable-and-up-1/2"],
  [class~="portable-and-up-2/4"],
  [class~="portable-and-up-3/6"],
  [class~="portable-and-up-4/8"],
  [class~="portable-and-up-5/10"],
  [class~="portable-and-up-6/12"] {
    width: 50% !important; }

  /**
   * Thirds.
   */
  [class~="portable-and-up-1/3"],
  [class~="portable-and-up-2/6"],
  [class~="portable-and-up-3/9"],
  [class~="portable-and-up-4/12"] {
    width: 33.3333333% !important; }

  [class~="portable-and-up-2/3"],
  [class~="portable-and-up-4/6"],
  [class~="portable-and-up-6/9"],
  [class~="portable-and-up-8/12"] {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  [class~="portable-and-up-1/4"],
  [class~="portable-and-up-2/8"],
  [class~="portable-and-up-3/12"] {
    width: 25% !important; }

  [class~="portable-and-up-3/4"],
  [class~="portable-and-up-6/8"],
  [class~="portable-and-up-9/12"] {
    width: 75% !important; }

  /**
   * Fifths.
   */
  [class~="portable-and-up-1/5"],
  [class~="portable-and-up-2/10"] {
    width: 20% !important; }

  [class~="portable-and-up-2/5"],
  [class~="portable-and-up-4/10"] {
    width: 40% !important; }

  [class~="portable-and-up-3/5"],
  [class~="portable-and-up-6/10"] {
    width: 60% !important; }

  [class~="portable-and-up-4/5"],
  [class~="portable-and-up-8/10"] {
    width: 80% !important; }

  /**
   * Sixths.
   */
  [class~="portable-and-up-1/6"],
  [class~="portable-and-up-2/12"] {
    width: 16.6666666% !important; }

  [class~="portable-and-up-5/6"],
  [class~="portable-and-up-10/12"] {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  [class~="portable-and-up-1/8"] {
    width: 12.5% !important; }

  [class~="portable-and-up-3/8"] {
    width: 37.5% !important; }

  [class~="portable-and-up-5/8"] {
    width: 62.5% !important; }

  [class~="portable-and-up-7/8"] {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  [class~="portable-and-up-1/9"] {
    width: 11.1111111% !important; }

  [class~="portable-and-up-2/9"] {
    width: 22.2222222% !important; }

  [class~="portable-and-up-4/9"] {
    width: 44.4444444% !important; }

  [class~="portable-and-up-5/9"] {
    width: 55.5555555% !important; }

  [class~="portable-and-up-7/9"] {
    width: 77.7777777% !important; }

  [class~="portable-and-up-8/9"] {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  [class~="portable-and-up-1/10"] {
    width: 10% !important; }

  [class~="portable-and-up-3/10"] {
    width: 30% !important; }

  [class~="portable-and-up-7/10"] {
    width: 70% !important; }

  [class~="portable-and-up-9/10"] {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  [class~="portable-and-up-1/12"] {
    width: 8.3333333% !important; }

  [class~="portable-and-up-5/12"] {
    width: 41.6666666% !important; }

  [class~="portable-and-up-7/12"] {
    width: 58.3333333% !important; }

  [class~="portable-and-up-11/12"] {
    width: 91.6666666% !important; } }
@media screen and (min-width: 1024px) {
  /**
   * Whole.
   */
  [class~="desk-1/1"] {
    width: 100% !important; }

  /**
   * Halves.
   */
  [class~="desk-1/2"],
  [class~="desk-2/4"],
  [class~="desk-3/6"],
  [class~="desk-4/8"],
  [class~="desk-5/10"],
  [class~="desk-6/12"] {
    width: 50% !important; }

  /**
   * Thirds.
   */
  [class~="desk-1/3"],
  [class~="desk-2/6"],
  [class~="desk-3/9"],
  [class~="desk-4/12"] {
    width: 33.3333333% !important; }

  [class~="desk-2/3"],
  [class~="desk-4/6"],
  [class~="desk-6/9"],
  [class~="desk-8/12"] {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  [class~="desk-1/4"],
  [class~="desk-2/8"],
  [class~="desk-3/12"] {
    width: 25% !important; }

  [class~="desk-3/4"],
  [class~="desk-6/8"],
  [class~="desk-9/12"] {
    width: 75% !important; }

  /**
   * Fifths.
   */
  [class~="desk-1/5"],
  [class~="desk-2/10"] {
    width: 20% !important; }

  [class~="desk-2/5"],
  [class~="desk-4/10"] {
    width: 40% !important; }

  [class~="desk-3/5"],
  [class~="desk-6/10"] {
    width: 60% !important; }

  [class~="desk-4/5"],
  [class~="desk-8/10"] {
    width: 80% !important; }

  /**
   * Sixths.
   */
  [class~="desk-1/6"],
  [class~="desk-2/12"] {
    width: 16.6666666% !important; }

  [class~="desk-5/6"],
  [class~="desk-10/12"] {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  [class~="desk-1/8"] {
    width: 12.5% !important; }

  [class~="desk-3/8"] {
    width: 37.5% !important; }

  [class~="desk-5/8"] {
    width: 62.5% !important; }

  [class~="desk-7/8"] {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  [class~="desk-1/9"] {
    width: 11.1111111% !important; }

  [class~="desk-2/9"] {
    width: 22.2222222% !important; }

  [class~="desk-4/9"] {
    width: 44.4444444% !important; }

  [class~="desk-5/9"] {
    width: 55.5555555% !important; }

  [class~="desk-7/9"] {
    width: 77.7777777% !important; }

  [class~="desk-8/9"] {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  [class~="desk-1/10"] {
    width: 10% !important; }

  [class~="desk-3/10"] {
    width: 30% !important; }

  [class~="desk-7/10"] {
    width: 70% !important; }

  [class~="desk-9/10"] {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  [class~="desk-1/12"] {
    width: 8.3333333% !important; }

  [class~="desk-5/12"] {
    width: 41.6666666% !important; }

  [class~="desk-7/12"] {
    width: 58.3333333% !important; }

  [class~="desk-11/12"] {
    width: 91.6666666% !important; } }
/*------------------------------------*\
    #SPACING
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/**
 * Margin helper classes.
 *
 * Add margins.
 */
.m {
  margin: 24px !important; }

.mt {
  margin-top: 24px !important; }

.mr {
  margin-right: 24px !important; }

.mb {
  margin-bottom: 24px !important; }

.ml {
  margin-left: 24px !important; }

.mh {
  margin-right: 24px !important;
  margin-left: 24px !important; }

.mv {
  margin-top: 24px !important;
  margin-bottom: 24px !important; }

/**
 * Add tiny margins.
 */
.m-- {
  margin: 6px !important; }

.mt-- {
  margin-top: 6px !important; }

.mr-- {
  margin-right: 6px !important; }

.mb-- {
  margin-bottom: 6px !important; }

.ml-- {
  margin-left: 6px !important; }

.mh-- {
  margin-right: 6px !important;
  margin-left: 6px !important; }

.mv-- {
  margin-top: 6px !important;
  margin-bottom: 6px !important; }

/**
 * Add small margins.
 */
.m- {
  margin: 12px !important; }

.mt- {
  margin-top: 12px !important; }

.mr- {
  margin-right: 12px !important; }

.mb- {
  margin-bottom: 12px !important; }

.ml- {
  margin-left: 12px !important; }

.mh- {
  margin-right: 12px !important;
  margin-left: 12px !important; }

.mv- {
  margin-top: 12px !important;
  margin-bottom: 12px !important; }

/**
 * Add large margins.
 */
.m\+ {
  margin: 48px !important; }

.mt\+ {
  margin-top: 48px !important; }

.mr\+ {
  margin-right: 48px !important; }

.mb\+ {
  margin-bottom: 48px !important; }

.ml\+ {
  margin-left: 48px !important; }

.mh\+ {
  margin-right: 48px !important;
  margin-left: 48px !important; }

.mv\+ {
  margin-top: 48px !important;
  margin-bottom: 48px !important; }

/**
 * Remove margins.
 */
.m0 {
  margin: 0 !important; }

.mt0 {
  margin-top: 0 !important; }

.mr0 {
  margin-right: 0 !important; }

.mb0 {
  margin-bottom: 0 !important; }

.ml0 {
  margin-left: 0 !important; }

.mh0 {
  margin-right: 0 !important;
  margin-left: 0 !important; }

.mv0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

/**
 * Padding helper classes.
 *
 * Add paddings.
 */
.p {
  padding: 24px !important; }

.pt {
  padding-top: 24px !important; }

.pr {
  padding-right: 24px !important; }

.pb {
  padding-bottom: 24px !important; }

.pl {
  padding-left: 24px !important; }

.ph {
  padding-right: 24px !important;
  padding-left: 24px !important; }

.pv {
  padding-top: 24px !important;
  padding-bottom: 24px !important; }

/**
 * Add small paddings.
 */
.p- {
  padding: 12px !important; }

.pt- {
  padding-top: 12px !important; }

.pr- {
  padding-right: 12px !important; }

.pb- {
  padding-bottom: 12px !important; }

.pl- {
  padding-left: 12px !important; }

.ph- {
  padding-right: 12px !important;
  padding-left: 12px !important; }

.pv- {
  padding-top: 12px !important;
  padding-bottom: 12px !important; }

/**
 * Remove paddings.
 */
.p0 {
  padding: 0 !important; }

.pt0 {
  padding-top: 0 !important; }

.pr0 {
  padding-right: 0 !important; }

.pb0 {
  padding-bottom: 0 !important; }

.pl0 {
  padding-left: 0 !important; }

.ph0 {
  padding-right: 0 !important;
  padding-left: 0 !important; }

.pv0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important; }

/*------------------------------------*\
    #SPACING-RESPONSIVE
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/**
 * Remove margins.
 */
@media screen and (max-width: 639px) {
  .palm-m0 {
    margin: 0 !important; }

  .palm-mt0 {
    margin-top: 0 !important; }

  .palm-mr0 {
    margin-right: 0 !important; }

  .palm-mb0 {
    margin-bottom: 0 !important; }

  .palm-ml0 {
    margin-left: 0 !important; }

  .palm-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important; }

  .palm-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important; } }
@media screen and (min-width: 640px) and (max-width: 1023px) {
  .lap-m0 {
    margin: 0 !important; }

  .lap-mt0 {
    margin-top: 0 !important; }

  .lap-mr0 {
    margin-right: 0 !important; }

  .lap-mb0 {
    margin-bottom: 0 !important; }

  .lap-ml0 {
    margin-left: 0 !important; }

  .lap-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important; }

  .lap-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important; } }
@media screen and (min-width: 640px) {
  .lap-and-up-m0 {
    margin: 0 !important; }

  .lap-and-up-mt0 {
    margin-top: 0 !important; }

  .lap-and-up-mr0 {
    margin-right: 0 !important; }

  .lap-and-up-mb0 {
    margin-bottom: 0 !important; }

  .lap-and-up-ml0 {
    margin-left: 0 !important; }

  .lap-and-up-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important; }

  .lap-and-up-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important; } }
@media screen and (max-width: 849px) {
  .portable-m0 {
    margin: 0 !important; }

  .portable-mt0 {
    margin-top: 0 !important; }

  .portable-mr0 {
    margin-right: 0 !important; }

  .portable-mb0 {
    margin-bottom: 0 !important; }

  .portable-ml0 {
    margin-left: 0 !important; }

  .portable-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important; }

  .portable-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important; } }
@media screen and (min-width: 850px) {
  .portable-and-up-m0 {
    margin: 0 !important; }

  .portable-and-up-mt0 {
    margin-top: 0 !important; }

  .portable-and-up-mr0 {
    margin-right: 0 !important; }

  .portable-and-up-mb0 {
    margin-bottom: 0 !important; }

  .portable-and-up-ml0 {
    margin-left: 0 !important; }

  .portable-and-up-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important; }

  .portable-and-up-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important; } }
@media screen and (min-width: 1024px) {
  .desk-m0 {
    margin: 0 !important; }

  .desk-mt0 {
    margin-top: 0 !important; }

  .desk-mr0 {
    margin-right: 0 !important; }

  .desk-mb0 {
    margin-bottom: 0 !important; }

  .desk-ml0 {
    margin-left: 0 !important; }

  .desk-mh0 {
    margin-right: 0 !important;
    margin-left: 0 !important; }

  .desk-mv0 {
    margin-top: 0 !important;
    margin-bottom: 0 !important; } }
/**
 * Add small paddings.
 */
@media screen and (max-width: 639px) {
  .palm-p- {
    padding: 12px !important; }

  .palm-pt- {
    padding-top: 12px !important; }

  .palm-pr- {
    padding-right: 12px !important; }

  .palm-pb- {
    padding-bottom: 12px !important; }

  .palm-pl- {
    padding-left: 12px !important; }

  .palm-ph- {
    padding-right: 12px !important;
    padding-left: 12px !important; }

  .palm-pv- {
    padding-top: 12px !important;
    padding-bottom: 12px !important; } }
@media screen and (min-width: 640px) and (max-width: 1023px) {
  .lap-p- {
    padding: 12px !important; }

  .lap-pt- {
    padding-top: 12px !important; }

  .lap-pr- {
    padding-right: 12px !important; }

  .lap-pb- {
    padding-bottom: 12px !important; }

  .lap-pl- {
    padding-left: 12px !important; }

  .lap-ph- {
    padding-right: 12px !important;
    padding-left: 12px !important; }

  .lap-pv- {
    padding-top: 12px !important;
    padding-bottom: 12px !important; } }
@media screen and (min-width: 640px) {
  .lap-and-up-p- {
    padding: 12px !important; }

  .lap-and-up-pt- {
    padding-top: 12px !important; }

  .lap-and-up-pr- {
    padding-right: 12px !important; }

  .lap-and-up-pb- {
    padding-bottom: 12px !important; }

  .lap-and-up-pl- {
    padding-left: 12px !important; }

  .lap-and-up-ph- {
    padding-right: 12px !important;
    padding-left: 12px !important; }

  .lap-and-up-pv- {
    padding-top: 12px !important;
    padding-bottom: 12px !important; } }
@media screen and (max-width: 849px) {
  .portable-p- {
    padding: 12px !important; }

  .portable-pt- {
    padding-top: 12px !important; }

  .portable-pr- {
    padding-right: 12px !important; }

  .portable-pb- {
    padding-bottom: 12px !important; }

  .portable-pl- {
    padding-left: 12px !important; }

  .portable-ph- {
    padding-right: 12px !important;
    padding-left: 12px !important; }

  .portable-pv- {
    padding-top: 12px !important;
    padding-bottom: 12px !important; } }
@media screen and (min-width: 850px) {
  .portable-and-up-p- {
    padding: 12px !important; }

  .portable-and-up-pt- {
    padding-top: 12px !important; }

  .portable-and-up-pr- {
    padding-right: 12px !important; }

  .portable-and-up-pb- {
    padding-bottom: 12px !important; }

  .portable-and-up-pl- {
    padding-left: 12px !important; }

  .portable-and-up-ph- {
    padding-right: 12px !important;
    padding-left: 12px !important; }

  .portable-and-up-pv- {
    padding-top: 12px !important;
    padding-bottom: 12px !important; } }
@media screen and (min-width: 1024px) {
  .desk-p- {
    padding: 12px !important; }

  .desk-pt- {
    padding-top: 12px !important; }

  .desk-pr- {
    padding-right: 12px !important; }

  .desk-pb- {
    padding-bottom: 12px !important; }

  .desk-pl- {
    padding-left: 12px !important; }

  .desk-ph- {
    padding-right: 12px !important;
    padding-left: 12px !important; }

  .desk-pv- {
    padding-top: 12px !important;
    padding-bottom: 12px !important; } }
/*------------------------------------*\
    #HIDE-RESPONSIVE
\*------------------------------------*/
/**
 * Responsive hide classes based on your responsive settings.
 */
@media screen and (max-width: 639px) {
  .palm-hide {
    display: none !important; } }
@media screen and (min-width: 640px) and (max-width: 1023px) {
  .lap-hide {
    display: none !important; } }
@media screen and (min-width: 640px) {
  .lap-and-up-hide {
    display: none !important; } }
@media screen and (max-width: 849px) {
  .portable-hide {
    display: none !important; } }
@media screen and (min-width: 850px) {
  .portable-and-up-hide {
    display: none !important; } }
@media screen and (min-width: 1024px) {
  .desk-hide {
    display: none !important; } }
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  .retina-hide {
    display: none !important; } }
/**
 * Helper-class for removing item visually, but not for screenreaders
 */
.accessibility {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important; }

/**
 * Floating left. Remember to add clearfix class on parent item: .clearfix
 */
.fl {
  float: left; }

/**
 * Floating right. Remember to add clearfix class on parent item: .clearfix
 */
.fr {
  float: right; }

/**
 * If we don't want to wrap the text over multiple lines.
 */
.no-wrap {
  white-space: nowrap; }

/**
 * Text align helper classes.
 */
.tr {
  text-align: right; }

.tc {
  text-align: center; }

.tl {
  text-align: left; }

.ma {
  margin: auto !important; }

/**
 * For removing content..
 */
.hide {
  display: none; }

.visible {
  display: inherit !important; }

/**
 * For gray text. WCAG on white background. Only on background over 18px size.
 */
.color-gray,
.color-grey {
  color: #767676; }

/**
 * Some places we want a bit smaller text:
 */
.font--small {
  font-size: 14px; }
  .font--small p {
    margin-bottom: 6px; }

/**
 * For hiding tabpanels with javascript:
 */
[role="tabpanel"][aria-hidden="true"] {
  display: none; }

/*------------------------------------*\
    #SHAME
    This is where we put quick sketches, hacks etc
    to fix later on.
    More on http://csswizardry.com/2013/04/shame-css/

    Document everything!!!!!
\*------------------------------------*/

/*# sourceMappingURL=style.css.map */